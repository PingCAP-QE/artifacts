# Set the user and group that Nginx will run under
user nginx;
worker_processes auto;

# Define the error log location
error_log /var/log/nginx/error.log;

# Define the location of the Nginx PID file
pid /run/nginx.pid;

# Define the worker connections
events {
    worker_connections 1024;
}

# Define the server blocks
http {
    # Define the MIME types that Nginx should recognize
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Define the logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$gzip_ratio" "$http_x_forwarded_for"';
    sendfile        on;
    #tcp_nopush     on;
    gzip  on;
    keepalive_timeout  65;
    
    # Define the server block for the default server
    server {
        listen 80  ;
        listen [::]:80  ;
        access_log   /var/log/s3proxy.access.log  combined;
        # Configure your Object Storage bucket URL here:
        set $bucket  "<bucket>";
        set $aws_access  '<S3-AK>';
        set $aws_secret  '<S3-SK>';

        # This configuration provides direct access to the Object Storage bucket:
        location ~* ^/s3/(.*)  {
            set $url_full         "$1";
            set_by_lua $now       "return ngx.cookie_time(ngx.time())";
            set $string_to_sign   "$request_method\n\n\n\nx-amz-date:${now}\n/$bucket/$url_full";
            set_hmac_sha1          $aws_signature $aws_secret $string_to_sign;
            set_encode_base64      $aws_signature $aws_signature;

            proxy_http_version     1.1;
            proxy_redirect         off;
            proxy_set_header       Host $bucket;
            proxy_set_header       x-amz-date $now;
            proxy_set_header       Authorization "AWS $aws_access:$aws_signature";
            proxy_set_header       X-Real-IP $remote_addr;
            proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_hide_header      Content-Type;
            proxy_intercept_errors on;
            rewrite                .* /$url_full break;
            proxy_pass             http://$bucket;
        }   
    }
}

name: Build multi stage images
on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}
  cancel-in-progress: false

jobs:
  check-comment:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
      component: ${{ steps.check.outputs.component }}
    steps:
      - id: check
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ $COMMENT =~ ^/just[[:space:]](.+)$ ]]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "task=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi

  just-build:
    needs: check-comment
    if: needs.check-comment.outputs.should-run == 'true'
    name: test building with multi stages
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up just tool
        uses: extractions/setup-just@v3
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          just-version: 1.34.0 # optional semver specification, otherwise latest

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run specific component build
        working-directory: dockerfiles
        run: |
          TASK="${{ needs.check-comment.outputs.task }}"
          if [ "$TASK" == "all" ]; then
            echo "Run all tasks"
            just msb-tidb
            just msb-pd
            just msb-cdc
            just msb-dm
            just msb-tidb-dashboard
            just msb-tidb-operator
            just msb-ng-monitoring
            just msb-tiflash
            just msb-tikv
          else
            echo "run Just task: $TASK"
            just $TASK
          fi

      - name: Comment on PR with results
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            const task = '${{ needs.check-comment.outputs.task }}';

            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `âœ… Task \`${task}\` completed successfully.`
            });
